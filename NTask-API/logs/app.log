{"message":"[Tue Jan 07 2020 15:50:54 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 15:50:54 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 15:50:54 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 15:50:54 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 15:50:54 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"::1 - - [07/Jan/2020:20:00:01 +0000] \"GET / HTTP/1.1\" 200 29\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:20:01:49 +0000] \"GET /users HTTP/1.1\" 404 144\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:20:02:15 +0000] \"GET /users HTTP/1.1\" 404 144\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:20:02:23 +0000] \"GET /users HTTP/1.1\" 404 144\n","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:05 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:05 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:05 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:05 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:05 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:05 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:05 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:05 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:05 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:05 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:05 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:05 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:05 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:05 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:05 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:05 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:05 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:05 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:05 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:05 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:05 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:05 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:05 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:05 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:06 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:06 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:06 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:06 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:06 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:06 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:06 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:06 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:06 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:06 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:06 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:06 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:06 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:06 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:06 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:21:06 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:23:43 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 16:29:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:07:12 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:11:25 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:00 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:00 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:00 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:00 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:00 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:00 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:00 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:00 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:00 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:00 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:00 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:00 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:00 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:01 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:01 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:01 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:01 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:01 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:01 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:01 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:01 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:01 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:14:01 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:45 +0000] \"GET /apidoc HTTP/1.1\" 301 179\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:45 +0000] \"GET /apidoc/ HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:45 +0000] \"GET /apidoc/vendor/require.min.js HTTP/1.1\" 304 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:45 +0000] \"GET /apidoc/vendor/prettify.css HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:45 +0000] \"GET /apidoc/css/style.css HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:45 +0000] \"GET /apidoc/vendor/bootstrap.min.css HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:45 +0000] \"GET /apidoc/vendor/polyfill.js HTTP/1.1\" 304 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:45 +0000] \"GET /apidoc/img/favicon.ico HTTP/1.1\" 200 894\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:45 +0000] \"GET /apidoc/main.js HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:45 +0000] \"GET /apidoc/api_project.js?v=1578431685399 HTTP/1.1\" 200 347\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:45 +0000] \"GET /apidoc/vendor/lodash.custom.min.js?v=1578431685399 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:45 +0000] \"GET /apidoc/locales/locale.js?v=1578431685399 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:45 +0000] \"GET /apidoc/api_data.js?v=1578431685399 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:45 +0000] \"GET /apidoc/vendor/webfontloader.js?v=1578431685399 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:45 +0000] \"GET /apidoc/utils/send_sample_request.js?v=1578431685399 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:45 +0000] \"GET /apidoc/vendor/semver.min.js?v=1578431685399 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:45 +0000] \"GET /apidoc/vendor/handlebars.min.js?v=1578431685399 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:45 +0000] \"GET /apidoc/vendor/jquery.min.js?v=1578431685399 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:45 +0000] \"GET /apidoc/vendor/path-to-regexp/index.js?v=1578431685399 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:45 +0000] \"GET /apidoc/locales/ca.js?v=1578431685399 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:45 +0000] \"GET /apidoc/vendor/prettify/prettify.js?v=1578431685399 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:45 +0000] \"GET /apidoc/vendor/list.min.js?v=1578431685399 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:45 +0000] \"GET /apidoc/locales/fr.js?v=1578431685399 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:45 +0000] \"GET /apidoc/locales/cs.js?v=1578431685399 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:45 +0000] \"GET /apidoc/locales/pl.js?v=1578431685399 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:45 +0000] \"GET /apidoc/locales/de.js?v=1578431685399 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:45 +0000] \"GET /apidoc/locales/es.js?v=1578431685399 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:45 +0000] \"GET /apidoc/locales/ro.js?v=1578431685399 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:45 +0000] \"GET /apidoc/locales/it.js?v=1578431685399 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:45 +0000] \"GET /apidoc/locales/nl.js?v=1578431685399 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:45 +0000] \"GET /apidoc/locales/vi.js?v=1578431685399 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:45 +0000] \"GET /apidoc/locales/pt_br.js?v=1578431685399 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:45 +0000] \"GET /apidoc/locales/ru.js?v=1578431685399 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:45 +0000] \"GET /apidoc/locales/tr.js?v=1578431685399 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:45 +0000] \"GET /apidoc/locales/zh.js?v=1578431685399 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:45 +0000] \"GET /apidoc/locales/zh_cn.js?v=1578431685399 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:45 +0000] \"GET /apidoc/vendor/bootstrap.min.js?v=1578431685399 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:45 +0000] \"GET /apidoc/utils/handlebars_helper.js?v=1578431685399 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:45 +0000] \"GET /apidoc/vendor/diff_match_patch.min.js?v=1578431685399 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:49 +0000] \"GET /apidoc/vendor/bootstrap.min.css HTTP/1.1\" 304 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:49 +0000] \"GET /apidoc/vendor/prettify.css HTTP/1.1\" 304 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:49 +0000] \"GET /apidoc/css/style.css HTTP/1.1\" 304 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:14:49 +0000] \"GET /apidoc/vendor/bootstrap.min.css.map HTTP/1.1\" 404 174\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:18:26 +0000] \"GET /apidoc/ HTTP/1.1\" 304 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:18:26 +0000] \"GET /apidoc/vendor/bootstrap.min.css HTTP/1.1\" 304 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:18:26 +0000] \"GET /apidoc/vendor/prettify.css HTTP/1.1\" 304 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:18:26 +0000] \"GET /apidoc/css/style.css HTTP/1.1\" 304 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:18:26 +0000] \"GET /apidoc/vendor/polyfill.js HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:18:26 +0000] \"GET /apidoc/vendor/require.min.js HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:18:26 +0000] \"GET /apidoc/img/favicon.ico HTTP/1.1\" 304 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:18:26 +0000] \"GET /apidoc/main.js HTTP/1.1\" 304 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:18:26 +0000] \"GET /apidoc/api_project.js?v=1578431906327 HTTP/1.1\" 200 347\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:18:26 +0000] \"GET /apidoc/locales/locale.js?v=1578431906327 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:18:26 +0000] \"GET /apidoc/vendor/lodash.custom.min.js?v=1578431906327 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:18:26 +0000] \"GET /apidoc/vendor/jquery.min.js?v=1578431906327 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:18:26 +0000] \"GET /apidoc/api_data.js?v=1578431906327 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:18:26 +0000] \"GET /apidoc/utils/send_sample_request.js?v=1578431906327 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:18:26 +0000] \"GET /apidoc/vendor/webfontloader.js?v=1578431906327 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:18:26 +0000] \"GET /apidoc/vendor/path-to-regexp/index.js?v=1578431906327 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:18:26 +0000] \"GET /apidoc/vendor/semver.min.js?v=1578431906327 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:18:26 +0000] \"GET /apidoc/vendor/list.min.js?v=1578431906327 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:18:26 +0000] \"GET /apidoc/vendor/prettify/prettify.js?v=1578431906327 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:18:26 +0000] \"GET /apidoc/vendor/handlebars.min.js?v=1578431906327 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:18:26 +0000] \"GET /apidoc/locales/ca.js?v=1578431906327 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:18:26 +0000] \"GET /apidoc/locales/cs.js?v=1578431906327 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:18:26 +0000] \"GET /apidoc/locales/de.js?v=1578431906327 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:18:26 +0000] \"GET /apidoc/locales/es.js?v=1578431906327 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:18:26 +0000] \"GET /apidoc/locales/fr.js?v=1578431906327 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:18:26 +0000] \"GET /apidoc/locales/nl.js?v=1578431906327 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:18:26 +0000] \"GET /apidoc/locales/it.js?v=1578431906327 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:18:26 +0000] \"GET /apidoc/locales/pl.js?v=1578431906327 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:18:26 +0000] \"GET /apidoc/vendor/bootstrap.min.css.map HTTP/1.1\" 404 174\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:18:26 +0000] \"GET /apidoc/locales/pt_br.js?v=1578431906327 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:18:26 +0000] \"GET /apidoc/locales/ro.js?v=1578431906327 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:18:26 +0000] \"GET /apidoc/locales/ru.js?v=1578431906327 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:18:26 +0000] \"GET /apidoc/locales/tr.js?v=1578431906327 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:18:26 +0000] \"GET /apidoc/locales/vi.js?v=1578431906327 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:18:26 +0000] \"GET /apidoc/locales/zh.js?v=1578431906327 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:18:26 +0000] \"GET /apidoc/locales/zh_cn.js?v=1578431906327 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:18:26 +0000] \"GET /apidoc/vendor/bootstrap.min.js?v=1578431906327 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:18:26 +0000] \"GET /apidoc/utils/handlebars_helper.js?v=1578431906327 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:18:26 +0000] \"GET /apidoc/vendor/diff_match_patch.min.js?v=1578431906327 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:00 +0000] \"GET / HTTP/1.1\" 200 29\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:09 +0000] \"GET /apidoc HTTP/1.1\" 301 179\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:09 +0000] \"GET /apidoc/ HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:09 +0000] \"GET /apidoc/vendor/prettify.css HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:09 +0000] \"GET /apidoc/vendor/polyfill.js HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:09 +0000] \"GET /apidoc/css/style.css HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:09 +0000] \"GET /apidoc/vendor/bootstrap.min.css HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:09 +0000] \"GET /apidoc/vendor/require.min.js HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:09 +0000] \"GET /apidoc/img/favicon.ico HTTP/1.1\" 200 894\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:09 +0000] \"GET /apidoc/main.js HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:10 +0000] \"GET /apidoc/vendor/lodash.custom.min.js?v=1578431949997 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:10 +0000] \"GET /apidoc/locales/locale.js?v=1578431949997 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:10 +0000] \"GET /apidoc/api_data.js?v=1578431949997 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:10 +0000] \"GET /apidoc/vendor/jquery.min.js?v=1578431949997 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:10 +0000] \"GET /apidoc/api_project.js?v=1578431949997 HTTP/1.1\" 200 347\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:10 +0000] \"GET /apidoc/utils/send_sample_request.js?v=1578431949997 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:10 +0000] \"GET /apidoc/vendor/semver.min.js?v=1578431949997 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:10 +0000] \"GET /apidoc/vendor/webfontloader.js?v=1578431949997 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:10 +0000] \"GET /apidoc/vendor/path-to-regexp/index.js?v=1578431949997 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:10 +0000] \"GET /apidoc/vendor/list.min.js?v=1578431949997 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:10 +0000] \"GET /apidoc/vendor/prettify/prettify.js?v=1578431949997 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:10 +0000] \"GET /apidoc/locales/ca.js?v=1578431949997 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:10 +0000] \"GET /apidoc/vendor/handlebars.min.js?v=1578431949997 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:10 +0000] \"GET /apidoc/locales/cs.js?v=1578431949997 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:10 +0000] \"GET /apidoc/locales/de.js?v=1578431949997 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:10 +0000] \"GET /apidoc/locales/es.js?v=1578431949997 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:10 +0000] \"GET /apidoc/locales/it.js?v=1578431949997 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:10 +0000] \"GET /apidoc/locales/fr.js?v=1578431949997 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:10 +0000] \"GET /apidoc/locales/nl.js?v=1578431949997 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:10 +0000] \"GET /apidoc/locales/pl.js?v=1578431949997 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:10 +0000] \"GET /apidoc/locales/ro.js?v=1578431949997 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:10 +0000] \"GET /apidoc/locales/pt_br.js?v=1578431949997 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:10 +0000] \"GET /apidoc/locales/ru.js?v=1578431949997 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:10 +0000] \"GET /apidoc/locales/zh.js?v=1578431949997 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:10 +0000] \"GET /apidoc/locales/vi.js?v=1578431949997 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:10 +0000] \"GET /apidoc/locales/tr.js?v=1578431949997 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:10 +0000] \"GET /apidoc/locales/zh_cn.js?v=1578431949997 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:10 +0000] \"GET /apidoc/vendor/bootstrap.min.js?v=1578431949997 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:10 +0000] \"GET /apidoc/utils/handlebars_helper.js?v=1578431949997 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:10 +0000] \"GET /apidoc/vendor/diff_match_patch.min.js?v=1578431949997 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:44 +0000] \"GET /apidoc/ HTTP/1.1\" 304 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:44 +0000] \"GET /apidoc/vendor/bootstrap.min.css HTTP/1.1\" 304 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:44 +0000] \"GET /apidoc/vendor/prettify.css HTTP/1.1\" 304 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:44 +0000] \"GET /apidoc/css/style.css HTTP/1.1\" 304 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:44 +0000] \"GET /apidoc/vendor/polyfill.js HTTP/1.1\" 304 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:44 +0000] \"GET /apidoc/vendor/require.min.js HTTP/1.1\" 304 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:44 +0000] \"GET /apidoc/main.js HTTP/1.1\" 304 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:44 +0000] \"GET /apidoc/locales/locale.js?v=1578431984588 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:44 +0000] \"GET /apidoc/vendor/lodash.custom.min.js?v=1578431984588 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:44 +0000] \"GET /apidoc/api_project.js?v=1578431984588 HTTP/1.1\" 200 347\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:44 +0000] \"GET /apidoc/vendor/jquery.min.js?v=1578431984588 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:44 +0000] \"GET /apidoc/api_data.js?v=1578431984588 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:44 +0000] \"GET /apidoc/utils/send_sample_request.js?v=1578431984588 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:44 +0000] \"GET /apidoc/vendor/semver.min.js?v=1578431984588 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:44 +0000] \"GET /apidoc/vendor/webfontloader.js?v=1578431984588 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:44 +0000] \"GET /apidoc/vendor/path-to-regexp/index.js?v=1578431984588 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:44 +0000] \"GET /apidoc/vendor/list.min.js?v=1578431984588 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:44 +0000] \"GET /apidoc/vendor/prettify/prettify.js?v=1578431984588 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:44 +0000] \"GET /apidoc/vendor/handlebars.min.js?v=1578431984588 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:44 +0000] \"GET /apidoc/locales/ca.js?v=1578431984588 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:44 +0000] \"GET /apidoc/locales/cs.js?v=1578431984588 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:44 +0000] \"GET /apidoc/locales/de.js?v=1578431984588 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:44 +0000] \"GET /apidoc/locales/es.js?v=1578431984588 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:44 +0000] \"GET /apidoc/locales/fr.js?v=1578431984588 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:44 +0000] \"GET /apidoc/locales/it.js?v=1578431984588 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:44 +0000] \"GET /apidoc/locales/pl.js?v=1578431984588 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:44 +0000] \"GET /apidoc/locales/nl.js?v=1578431984588 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:44 +0000] \"GET /apidoc/locales/pt_br.js?v=1578431984588 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:44 +0000] \"GET /apidoc/locales/ro.js?v=1578431984588 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:44 +0000] \"GET /apidoc/locales/ru.js?v=1578431984588 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:44 +0000] \"GET /apidoc/locales/tr.js?v=1578431984588 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:44 +0000] \"GET /apidoc/locales/vi.js?v=1578431984588 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:44 +0000] \"GET /apidoc/locales/zh.js?v=1578431984588 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:44 +0000] \"GET /apidoc/locales/zh_cn.js?v=1578431984588 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:44 +0000] \"GET /apidoc/vendor/bootstrap.min.js?v=1578431984588 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:44 +0000] \"GET /apidoc/utils/handlebars_helper.js?v=1578431984588 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::ffff:127.0.0.1 - - [07/Jan/2020:21:19:45 +0000] \"GET /apidoc/vendor/diff_match_patch.min.js?v=1578431984588 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:40:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:29 +0000] \"GET / HTTP/1.1\" 200 29\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:29 +0000] \"GET /favicon.ico HTTP/1.1\" 404 150\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:35 +0000] \"GET /apidoc HTTP/1.1\" 301 179\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:35 +0000] \"GET /apidoc/ HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:35 +0000] \"GET /apidoc/vendor/prettify.css HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:35 +0000] \"GET /apidoc/vendor/bootstrap.min.css HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:35 +0000] \"GET /apidoc/vendor/require.min.js HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:35 +0000] \"GET /apidoc/css/style.css HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:35 +0000] \"GET /apidoc/vendor/polyfill.js HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:35 +0000] \"GET /apidoc/img/favicon.ico HTTP/1.1\" 200 894\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:35 +0000] \"GET /apidoc/main.js HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:35 +0000] \"GET /apidoc/vendor/lodash.custom.min.js?v=1578433295798 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:35 +0000] \"GET /apidoc/api_project.js?v=1578433295798 HTTP/1.1\" 200 347\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:35 +0000] \"GET /apidoc/vendor/semver.min.js?v=1578433295798 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:35 +0000] \"GET /apidoc/locales/locale.js?v=1578433295798 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:35 +0000] \"GET /apidoc/api_data.js?v=1578433295798 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:35 +0000] \"GET /apidoc/utils/send_sample_request.js?v=1578433295798 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:35 +0000] \"GET /apidoc/vendor/jquery.min.js?v=1578433295798 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:35 +0000] \"GET /apidoc/vendor/handlebars.min.js?v=1578433295798 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:35 +0000] \"GET /apidoc/vendor/webfontloader.js?v=1578433295798 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:35 +0000] \"GET /apidoc/vendor/path-to-regexp/index.js?v=1578433295798 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:35 +0000] \"GET /apidoc/vendor/list.min.js?v=1578433295798 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:35 +0000] \"GET /apidoc/locales/es.js?v=1578433295798 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:35 +0000] \"GET /apidoc/vendor/prettify/prettify.js?v=1578433295798 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:35 +0000] \"GET /apidoc/locales/nl.js?v=1578433295798 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:35 +0000] \"GET /apidoc/locales/ca.js?v=1578433295798 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:35 +0000] \"GET /apidoc/locales/cs.js?v=1578433295798 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:35 +0000] \"GET /apidoc/locales/de.js?v=1578433295798 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:35 +0000] \"GET /apidoc/locales/pl.js?v=1578433295798 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:35 +0000] \"GET /apidoc/locales/tr.js?v=1578433295798 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:35 +0000] \"GET /apidoc/locales/fr.js?v=1578433295798 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:35 +0000] \"GET /apidoc/locales/zh.js?v=1578433295798 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:35 +0000] \"GET /apidoc/locales/it.js?v=1578433295798 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:35 +0000] \"GET /apidoc/locales/zh_cn.js?v=1578433295798 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:35 +0000] \"GET /apidoc/locales/pt_br.js?v=1578433295798 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:35 +0000] \"GET /apidoc/locales/ro.js?v=1578433295798 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:35 +0000] \"GET /apidoc/locales/ru.js?v=1578433295798 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:35 +0000] \"GET /apidoc/locales/vi.js?v=1578433295798 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:35 +0000] \"GET /apidoc/vendor/bootstrap.min.js?v=1578433295798 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:35 +0000] \"GET /apidoc/utils/handlebars_helper.js?v=1578433295798 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:41:35 +0000] \"GET /apidoc/vendor/diff_match_patch.min.js?v=1578433295798 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:50:21 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `tasks` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` VARCHAR(255) NOT NULL, `done` TINYINT(1) NOT NULL DEFAULT 0, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`tasks`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL);","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_LIST(`users`)","level":"info"}
{"message":"[Tue Jan 07 2020 17:53:37 GMT-0400 (GMT-04:00)] Executing (default): PRAGMA INDEX_INFO(`sqlite_autoindex_users_1`)","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:18 +0000] \"GET /apidoc/ HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:18 +0000] \"GET /apidoc/vendor/bootstrap.min.css HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:18 +0000] \"GET /apidoc/vendor/prettify.css HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:18 +0000] \"GET /apidoc/css/style.css HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:18 +0000] \"GET /apidoc/vendor/polyfill.js HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:18 +0000] \"GET /apidoc/vendor/require.min.js HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:18 +0000] \"GET /apidoc/img/favicon.ico HTTP/1.1\" 200 894\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:18 +0000] \"GET /apidoc/main.js HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:18 +0000] \"GET /apidoc/api_project.js?v=1578434058703 HTTP/1.1\" 200 347\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:18 +0000] \"GET /apidoc/locales/locale.js?v=1578434058703 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:18 +0000] \"GET /apidoc/vendor/lodash.custom.min.js?v=1578434058703 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:18 +0000] \"GET /apidoc/vendor/jquery.min.js?v=1578434058703 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:18 +0000] \"GET /apidoc/api_data.js?v=1578434058703 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:18 +0000] \"GET /apidoc/utils/send_sample_request.js?v=1578434058703 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:18 +0000] \"GET /apidoc/vendor/webfontloader.js?v=1578434058703 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:18 +0000] \"GET /apidoc/vendor/semver.min.js?v=1578434058703 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:18 +0000] \"GET /apidoc/vendor/path-to-regexp/index.js?v=1578434058703 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:18 +0000] \"GET /apidoc/vendor/prettify/prettify.js?v=1578434058703 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:18 +0000] \"GET /apidoc/vendor/list.min.js?v=1578434058703 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:18 +0000] \"GET /apidoc/locales/ca.js?v=1578434058703 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:18 +0000] \"GET /apidoc/locales/cs.js?v=1578434058703 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:18 +0000] \"GET /apidoc/locales/de.js?v=1578434058703 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:18 +0000] \"GET /apidoc/vendor/handlebars.min.js?v=1578434058703 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:18 +0000] \"GET /apidoc/locales/es.js?v=1578434058703 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:18 +0000] \"GET /apidoc/locales/fr.js?v=1578434058703 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:18 +0000] \"GET /apidoc/locales/it.js?v=1578434058703 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:18 +0000] \"GET /apidoc/locales/nl.js?v=1578434058703 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:18 +0000] \"GET /apidoc/locales/pl.js?v=1578434058703 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:18 +0000] \"GET /apidoc/locales/pt_br.js?v=1578434058703 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:18 +0000] \"GET /apidoc/locales/ro.js?v=1578434058703 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:18 +0000] \"GET /apidoc/locales/ru.js?v=1578434058703 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:18 +0000] \"GET /apidoc/locales/tr.js?v=1578434058703 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:18 +0000] \"GET /apidoc/locales/vi.js?v=1578434058703 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:18 +0000] \"GET /apidoc/locales/zh.js?v=1578434058703 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:18 +0000] \"GET /apidoc/locales/zh_cn.js?v=1578434058703 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:18 +0000] \"GET /apidoc/vendor/bootstrap.min.js?v=1578434058703 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:18 +0000] \"GET /apidoc/utils/handlebars_helper.js?v=1578434058703 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:18 +0000] \"GET /apidoc/vendor/diff_match_patch.min.js?v=1578434058703 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:42 +0000] \"GET /apidoc/ HTTP/1.1\" 304 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:42 +0000] \"GET /apidoc/vendor/polyfill.js HTTP/1.1\" 304 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:42 +0000] \"GET /apidoc/vendor/bootstrap.min.css HTTP/1.1\" 304 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:42 +0000] \"GET /apidoc/vendor/require.min.js HTTP/1.1\" 304 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:42 +0000] \"GET /apidoc/css/style.css HTTP/1.1\" 304 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:42 +0000] \"GET /apidoc/vendor/prettify.css HTTP/1.1\" 304 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:43 +0000] \"GET /apidoc/main.js HTTP/1.1\" 304 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:43 +0000] \"GET /apidoc/locales/locale.js?v=1578434083146 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:43 +0000] \"GET /apidoc/api_project.js?v=1578434083146 HTTP/1.1\" 200 347\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:43 +0000] \"GET /apidoc/vendor/lodash.custom.min.js?v=1578434083146 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:43 +0000] \"GET /apidoc/vendor/jquery.min.js?v=1578434083146 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:43 +0000] \"GET /apidoc/api_data.js?v=1578434083146 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:43 +0000] \"GET /apidoc/utils/send_sample_request.js?v=1578434083146 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:43 +0000] \"GET /apidoc/vendor/semver.min.js?v=1578434083146 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:43 +0000] \"GET /apidoc/vendor/webfontloader.js?v=1578434083146 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:43 +0000] \"GET /apidoc/vendor/path-to-regexp/index.js?v=1578434083146 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:43 +0000] \"GET /apidoc/vendor/list.min.js?v=1578434083146 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:43 +0000] \"GET /apidoc/vendor/prettify/prettify.js?v=1578434083146 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:43 +0000] \"GET /apidoc/vendor/handlebars.min.js?v=1578434083146 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:43 +0000] \"GET /apidoc/locales/ca.js?v=1578434083146 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:43 +0000] \"GET /apidoc/locales/cs.js?v=1578434083146 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:43 +0000] \"GET /apidoc/locales/de.js?v=1578434083146 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:43 +0000] \"GET /apidoc/locales/es.js?v=1578434083146 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:43 +0000] \"GET /apidoc/locales/fr.js?v=1578434083146 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:43 +0000] \"GET /apidoc/locales/it.js?v=1578434083146 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:43 +0000] \"GET /apidoc/locales/nl.js?v=1578434083146 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:43 +0000] \"GET /apidoc/locales/pl.js?v=1578434083146 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:43 +0000] \"GET /apidoc/locales/pt_br.js?v=1578434083146 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:43 +0000] \"GET /apidoc/locales/tr.js?v=1578434083146 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:43 +0000] \"GET /apidoc/locales/ru.js?v=1578434083146 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:43 +0000] \"GET /apidoc/locales/ro.js?v=1578434083146 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:43 +0000] \"GET /apidoc/locales/vi.js?v=1578434083146 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:43 +0000] \"GET /apidoc/locales/zh.js?v=1578434083146 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:43 +0000] \"GET /apidoc/locales/zh_cn.js?v=1578434083146 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:43 +0000] \"GET /apidoc/vendor/bootstrap.min.js?v=1578434083146 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:43 +0000] \"GET /apidoc/utils/handlebars_helper.js?v=1578434083146 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:54:43 +0000] \"GET /apidoc/vendor/diff_match_patch.min.js?v=1578434083146 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:57:53 +0000] \"GET /apidoc/css/style.css HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:57:53 +0000] \"GET /apidoc/vendor/prettify.css HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:57:53 +0000] \"GET /apidoc/vendor/bootstrap.min.css HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:57:53 +0000] \"GET /apidoc/vendor/bootstrap.min.css.map HTTP/1.1\" 404 174\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:05 +0000] \"GET /apidoc/ HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:06 +0000] \"GET /apidoc/vendor/bootstrap.min.css HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:06 +0000] \"GET /apidoc/vendor/require.min.js HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:06 +0000] \"GET /apidoc/css/style.css HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:06 +0000] \"GET /apidoc/vendor/prettify.css HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:06 +0000] \"GET /apidoc/vendor/polyfill.js HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:06 +0000] \"GET /apidoc/vendor/bootstrap.min.css.map HTTP/1.1\" 404 174\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:06 +0000] \"GET /apidoc/main.js HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:06 +0000] \"GET /apidoc/img/favicon.ico HTTP/1.1\" 200 894\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:06 +0000] \"GET /apidoc/api_project.js?v=1578434286094 HTTP/1.1\" 200 347\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:06 +0000] \"GET /apidoc/vendor/lodash.custom.min.js?v=1578434286094 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:06 +0000] \"GET /apidoc/api_data.js?v=1578434286094 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:06 +0000] \"GET /apidoc/locales/locale.js?v=1578434286094 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:06 +0000] \"GET /apidoc/vendor/jquery.min.js?v=1578434286094 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:06 +0000] \"GET /apidoc/utils/send_sample_request.js?v=1578434286094 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:06 +0000] \"GET /apidoc/vendor/path-to-regexp/index.js?v=1578434286094 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:06 +0000] \"GET /apidoc/vendor/webfontloader.js?v=1578434286094 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:06 +0000] \"GET /apidoc/vendor/semver.min.js?v=1578434286094 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:06 +0000] \"GET /apidoc/vendor/list.min.js?v=1578434286094 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:06 +0000] \"GET /apidoc/vendor/prettify/prettify.js?v=1578434286094 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:06 +0000] \"GET /apidoc/vendor/handlebars.min.js?v=1578434286094 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:06 +0000] \"GET /apidoc/locales/ca.js?v=1578434286094 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:06 +0000] \"GET /apidoc/locales/cs.js?v=1578434286094 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:06 +0000] \"GET /apidoc/locales/es.js?v=1578434286094 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:06 +0000] \"GET /apidoc/locales/de.js?v=1578434286094 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:06 +0000] \"GET /apidoc/locales/it.js?v=1578434286094 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:06 +0000] \"GET /apidoc/locales/fr.js?v=1578434286094 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:06 +0000] \"GET /apidoc/locales/pl.js?v=1578434286094 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:06 +0000] \"GET /apidoc/locales/nl.js?v=1578434286094 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:06 +0000] \"GET /apidoc/locales/pt_br.js?v=1578434286094 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:06 +0000] \"GET /apidoc/locales/tr.js?v=1578434286094 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:06 +0000] \"GET /apidoc/locales/ro.js?v=1578434286094 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:06 +0000] \"GET /apidoc/locales/ru.js?v=1578434286094 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:06 +0000] \"GET /apidoc/locales/vi.js?v=1578434286094 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:06 +0000] \"GET /apidoc/locales/zh.js?v=1578434286094 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:06 +0000] \"GET /apidoc/locales/zh_cn.js?v=1578434286094 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:06 +0000] \"GET /apidoc/vendor/bootstrap.min.js?v=1578434286094 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:06 +0000] \"GET /apidoc/utils/handlebars_helper.js?v=1578434286094 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:06 +0000] \"GET /apidoc/vendor/diff_match_patch.min.js?v=1578434286094 HTTP/1.1\" 200 -\n","level":"info"}
{"message":"::1 - - [07/Jan/2020:21:58:35 +0000] \"GET / HTTP/1.1\" 200 29\n","level":"info"}
